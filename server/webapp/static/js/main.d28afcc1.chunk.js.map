{"version":3,"sources":["components/Login.js","components/search_Item_results.js","components/Movie.js","components/movie_list_Results.js","components/Registr.js","components/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["Login","state","email","password","RedirectToHome","isError","login","setState","axios","post","then","res","status","console","log","catch","err","disabled","this","to","className","type","onChange","evt","target","value","required","placeholder","style","color","onClick","Component","SearchArea","props","class","action","onSubmit","handleSubmit","handleChange","Movie","image","src","title","MovieList","movies","map","movie","i","key","poster_path","Registr","registr","myKey","Home","e","preventDefault","fetch","searchTerm","data","json","results","totalResuolts","total_results","nextPage","pageNumber","currentPage","moviesTop","isLoaded","moviesPopular","tvShowsTop","tvShowsPopular","get","response","moviesData","ntate","allmovies","index","overview","vote_average","Math","floor","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d28afcc1.chunk.js","sourcesContent":["import React,{Component}from 'react';\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport {Redirect} from 'react-router-dom'; \r\n\r\nclass Login extends Component{\r\n\r\n   state = {email : \"\" , password : \"\", RedirectToHome : false, isError : false}\r\n// ____\r\n\r\n    login = () => {\r\n        this.setState({isError : false});\r\n        \r\n        axios.post('/users/login',{\r\n            email : this.state.email,\r\n            password : this.state.password\r\n        }).then(res=>{\r\n            // res.data is user\r\n            if(res.status === 200){\r\n                this.setState({RedirectToHome : true});\r\n            }\r\n            else{\r\n                this.setState({isError : true})\r\n                console.log(`error code : ${res.status}`);\r\n                \r\n            }\r\n            \r\n        }).catch(err=>{\r\n            this.setState({isError : true})\r\n            console.log(err);\r\n        })\r\n    }\r\n// ____\r\n\r\n    render(){\r\n            const disabled = !this.state.email || !this.state.password;\r\n        if(this.state.RedirectToHome){\r\n            return <Redirect to = '/'/>\r\n        }\r\n\r\n        return(\r\n            <div className='Login-User'>\r\n                <h1>Login Page</h1>\r\n                <input type='email' onChange={evt => this.setState({email : evt.target.value})} \r\n                required='required' placeholder='email'/>\r\n                <br/>\r\n                <input type=\"password\" onChange={evt => this.setState({password : evt.target.value})}\r\n                 required='required' placeholder='password'/>\r\n                 <br/>\r\n               {this.state.isError ? <p style={{color: 'red'}}>Login Error</p> : \"\"}\r\n                <button disabled={disabled} onClick={this.login}>Login</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { GoSearch } from \"react-icons/go\";\r\n// import { FaSearch  } from 'react-icons/fa';\r\n\r\n\r\nconst SearchArea = (props) => {\r\n\r\n\r\n    return (\r\n        \r\n            <div className=\"row\">\r\n                <div class=\"col-lg-4 col-lg-offset-4\">\r\n\r\n                    <form action=\"\" onSubmit={props.handleSubmit}>\r\n                        <div class=\"input-group\">\r\n                            <input class=\"form-control\" placeholder=\"search movie\" type=\"text\" onChange={props.handleChange} />\r\n                            {/* <button onClick={props.handleChange}><GoSearch/></button> */}\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n         \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SearchArea;","import React from 'react';\r\nimport \"./Movie.css\"\r\nconst Movie = (props) => {\r\n    return (\r\n        <section>\r\n\r\n            <div className=\"card-body\">\r\n                <div className=\"card movie-card\" >\r\n\r\n                    {props.image = <img className=\"card-img-top\" src={`https://image.tmdb.org/t/p/w500${props.image}`} /> }\r\n\r\n                    {props.title = <h6 className=\"card-title\">{props.title}</h6>}\r\n\r\n                   \r\n\r\n                   \r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport Movie from './Movie.js';\r\nimport './movie_list.css';\r\n\r\nconst MovieList = (props) => {\r\n    return (\r\n\r\n\r\n        <div className=\" movies-list\">\r\n\r\n            {\r\n                props.movies.map((movie, i) => {\r\n                    return (\r\n                        <div>\r\n                           \r\n\r\n                                <Movie key={i} image={movie.poster_path} title={movie.title} />\r\n                                 \r\n                            \r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MovieList;","import React, { Component } from \"react\";\r\nimport \"./registr.css\";\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport {Redirect} from 'react-router-dom'; \r\n\r\nclass Registr extends Component {\r\n    state = {email : \"\" , password : \"\", RedirectToHome : false, isError : false}\r\n// ____\r\n\r\nregistr = () => {\r\n        this.setState({isError : false});\r\n        \r\n        axios.post('/users/registr',{\r\n            email : this.state.email,\r\n            password : this.state.password\r\n        }).then(res=>{\r\n            // res.data is user\r\n            if(res.status === 201){\r\n                this.setState({RedirectToHome : true});\r\n            }\r\n            else{\r\n                this.setState({isError : true})\r\n                console.log(`error code : ${res.status}`);\r\n                \r\n            }\r\n            \r\n        }).catch(err=>{\r\n            this.setState({isError : true})\r\n            console.log(err);\r\n        })\r\n    }\r\n// ____\r\n\r\n    render(){\r\n            const disabled = !this.state.email || !this.state.password;\r\n        if(this.state.RedirectToHome){\r\n            return <Redirect to = '/'/>\r\n        }\r\n\r\n        return(\r\n            <div className='registr-User'>\r\n                <h1>Registr Page</h1>\r\n                <input type='email' onChange={evt => this.setState({email : evt.target.value})} \r\n                required='required' placeholder='email'/>\r\n                <br/>\r\n                <input type=\"password\" onChange={evt => this.setState({password : evt.target.value})}\r\n                 required='required' placeholder='password'/>\r\n                 <br/>\r\n               {this.state.isError ? <p style={{color: 'red'}}>Registr Error</p> : \"\"}\r\n                <button disabled={disabled} onClick={this.registr}>Registr</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Registr;\r\n","import React, { Component } from 'react';\r\nimport axios from '../../../server/node_modules/axios';\r\nimport SearchArea from './search_Item_results';\r\nimport MovieList from './movie_list_Results';\r\nimport './home.css';\r\n// import Pagination from './Pagination';\r\nimport Registr from \"./Registr\";\r\n\r\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\r\nlet myKey = 'd759a614b16c0c1c0295b4313e94aeec';\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            moviesTop: [],\r\n            movies: [],\r\n            isLoaded: false,\r\n            moviesPopular: [],\r\n            tvShowsTop: [],\r\n            searchTerm: '',\r\n            tvShowsPopular: [],\r\n            totalResuolts : 0,\r\n            currentPage:1\r\n        }\r\n        console.log(\"constructor\");\r\n    }\r\n// ______________________________________________\r\n    async componentDidMount() {\r\n        const response = await axios.get(\"http://localhost:8080/home\");\r\n        const moviesData = response.data.movies;\r\n        console.log(moviesData);\r\n        console.log(\"componentDidMount\");\r\n\r\n        const ntate = {\r\n            moviesTop: moviesData,\r\n            movies: [],\r\n            isLoaded: true,\r\n            moviesPopular: [],\r\n            tvShowsTop: [],\r\n            searchTerm: '',\r\n            tvShowsPopular: []\r\n        };\r\n        this.setState(ntate);\r\n    }\r\n// __________________________________________\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${myKey}&query=${this.state.searchTerm}`)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ movies: [...data.results], totalResuolts:data.total_results });\r\n                console.log(\"loki\");\r\n            })\r\n    }\r\n// _________________________________\r\n    handleChange = (e) => {\r\n        this.setState({ searchTerm: e.target.value })\r\n    }\r\n// _________________________________\r\n    nextPage = (pageNumber)=>{\r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${myKey}&query=${this.state.searchTerm}&page=${pageNumber}`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            this.setState({ movies: [...data.results],currentPage:pageNumber });\r\n            console.log(\"loki\");\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const allmovies = this.state.moviesTop.map((movie, index) =>\r\n            <div className=\"card movie-card\">\r\n                <img className=\"card-img-top\" src={`${baseImgUrl}/${movie.poster_path}`} />\r\n                <div className=\"card-body\">\r\n                    \r\n                <h4 className=\"card-title\" key={index}>{movie.title}</h4>\r\n                <p className=\"card-text\">{movie.overview}</p>\r\n                <p className=\"card-text\">{movie.vote_average}</p>\r\n                {console.log(\"render\")}\r\n               \r\n                </div>\r\n            </div>)\r\n        const numberPages = Math.floor(this.state.totalResuolts / 20); \r\n        return (\r\n            <div className='Home '>\r\n                <h1>Welcome To Foxx Movie</h1>\r\n                <div className=\"container\">\r\n                <SearchArea handleSubmit={this.handleSubmit} handleChange={this.handleChange}/>\r\n                <MovieList movies={this.state.movies}/>\r\n                \r\n                </div>\r\n                {allmovies}\r\n               \r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom';\nimport '../App.css';\nimport Login from './Login';\n// import SearchArea from './search_Item_results';\nimport Home from './Home';\nimport MovieList from './movie_list_Results';\nimport Registr from './Registr';\n\n\nclass App extends Component {\n  \n  render() {\n\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n                <div className=\"LinkHead\">\n\n                   <Link to='/'>Home</Link>\n                  <Link to='/Login'>Login</Link>\n                  <Link to='/Registr'>Registr</Link>\n                  <Link to='/search_item_results'>Search</Link>\n\n                 </div>\n\n          <Switch>\n            < Route exact path='/' component={Home} />\n            < Route exact path='/Login' component={Login} />\n            <Route exact path='/MovieList' component={MovieList}/>\n            <Route exact path='/Registr' component={Registr}/>\n            \n           \n          \n\n            \n            \n\n\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}