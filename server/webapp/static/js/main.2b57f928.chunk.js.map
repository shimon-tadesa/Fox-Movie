{"version":3,"sources":["components/Login.js","components/search_Item_results.js","components/Movie.js","components/movie_list_Results.js","components/Home.js","components/Registr.js","components/Logout.js","components/App.js","serviceWorker.js","index.js"],"names":["Login","state","email","password","RedirectToHome","isError","login","setState","axios","post","then","res","status","props","setUser","data","console","log","catch","err","disabled","this","to","className","type","onChange","evt","target","value","required","placeholder","style","color","onClick","Component","SearchArea","class","action","onSubmit","handleSubmit","handleChange","Movie","myImage","src","myTitle","myOverview","userVote","MovieList","movies","map","movie","i","key","poster_path","title","overview","vote_average","Home","e","preventDefault","fetch","searchTerm","json","results","totalResuolts","total_results","moviesTop","isLoaded","moviesPopular","tvShowsTop","tvShowsPopular","currentPage","get","response","moviesData","allmovies","index","alt","Registr","registr","Logout","App","user","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b57f928.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    state = { email: \"\", password: \"\", RedirectToHome: false, isError: false }\r\n    // ____\r\n\r\n    login = () => {\r\n        this.setState({ isError: false });\r\n\r\n        axios.post('/users/login', {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                // res.data is user\r\n                this.setState({ RedirectToHome: true });\r\n                this.props.setUser(res.data);\r\n            }\r\n            else {\r\n                this.setState({ isError: true })\r\n                console.log(`error code : ${res.status}`);\r\n\r\n            }\r\n\r\n        }).catch(err => {\r\n            this.setState({ isError: true })\r\n            console.log(err);\r\n        })\r\n    }\r\n    // ____\r\n\r\n    render() {\r\n        const disabled = !this.state.email || !this.state.password;\r\n        if (this.state.RedirectToHome) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div className='Login-User'>\r\n                <h1>Login Page</h1>\r\n                <input type='email' onChange={evt => this.setState({ email: evt.target.value })}\r\n                    required='required' placeholder='email' />\r\n                <br />\r\n                <input type=\"password\" onChange={evt => this.setState({ password: evt.target.value })}\r\n                    required='required' placeholder='password' />\r\n                <br />\r\n                {this.state.isError ? <p style={{ color: 'red' }}>Login Error</p> : \"\"}\r\n                <button disabled={disabled} onClick={this.login}>Login</button>\r\n\r\n\r\n\r\n\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { GoSearch } from \"react-icons/go\";\r\n// import { FaSearch  } from 'react-icons/fa';\r\n\r\n\r\nconst SearchArea = (props) => {\r\n\r\n\r\n    return (\r\n        \r\n            <div className=\"row\">\r\n                <div class=\"col-lg-4 col-lg-offset-4\">\r\n\r\n                    <form action=\"\" onSubmit={props.handleSubmit}>\r\n                        <div class=\"input-group\">\r\n                            <input class=\"form-control\" placeholder=\"search movie\" type=\"text\" onChange={props.handleChange} />\r\n                            {/* <button onClick={props.handleChange}><GoSearch/></button> */}\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n         \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SearchArea;","import React from 'react';\r\nconst Movie = (props) => {\r\n    return (\r\n      \r\n\r\n            <div className=\"card movie-card\" >\r\n\r\n                {props.myImage = <img className=\"card-img-top\" src={`https://image.tmdb.org/t/p/w500${props.myImage}`} />}\r\n                <div className=\"card-body\">\r\n                    {props.myTitle = <h4 className=\"card-title\">{props.myTitle}</h4>}\r\n                    {props.myOverview = <p className=\"card-text\">{props.myOverview}</p>}\r\n                    {props.userVote = <p className=\"card-text\">{props.userVote}</p>}\r\n                </div>\r\n\r\n            </div>\r\n       \r\n\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport Movie from './Movie.js';\r\nimport './movie_list.css';\r\n\r\nconst MovieList = (props) => {\r\n    return (\r\n        //data movie body api then send to movie.js\r\n        <div className=\" movie-card\">\r\n\r\n            {\r\n                props.movies.map((movie, i) => {\r\n                    return (\r\n                        <div>\r\n                            <Movie\r\n                                key={i} myImage={movie.poster_path} myTitle={movie.title}\r\n                                myOverview={movie.overview} userVote={movie.vote_average} />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MovieList;","import React, { Component } from 'react';\r\nimport axios from '../../../server/node_modules/axios';\r\nimport SearchArea from './search_Item_results';\r\nimport MovieList from './movie_list_Results';\r\nimport './home.css';\r\n\r\n\r\n\r\nconst baseImgUrl = 'https://image.tmdb.org/t/p/w500';\r\nlet myKey = 'd759a614b16c0c1c0295b4313e94aeec';\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            moviesTop: [],\r\n            movies: [],\r\n            isLoaded: false,\r\n            moviesPopular: [],\r\n            tvShowsTop: [],\r\n            searchTerm: '',\r\n            tvShowsPopular: [],\r\n            totalResuolts : 0,\r\n            currentPage:1\r\n        }\r\n        console.log(\"constructor\");\r\n    }\r\n// ______________________________________________\r\n    async componentDidMount() {\r\n        const response = await axios.get(\"http://localhost:8080/home\");\r\n        const moviesData = response.data.movies;\r\n        console.log(moviesData);\r\n        console.log(\"componentDidMount\");\r\n        this.setState({moviesTop: moviesData});\r\n        \r\n    }\r\n// __________________________________________\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${myKey}&query=${this.state.searchTerm}`)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ movies: [...data.results], totalResuolts:data.total_results });\r\n                console.log(\"search is done\");\r\n            })\r\n    }\r\n// _________________________________\r\n    handleChange = (e) => {\r\n        this.setState({ searchTerm: e.target.value })\r\n    }\r\n// _________________________________\r\n    // nextPage = (pageNumber)=>{\r\n    //     fetch(`https://api.themoviedb.org/3/search/movie?api_key=${myKey}&query=${this.state.searchTerm}&page=${pageNumber}`)\r\n    //     .then(data => data.json())\r\n    //     .then(data => {\r\n    //         console.log(data)\r\n    //         this.setState({ movies: [...data.results],currentPage:pageNumber });\r\n    //         console.log(\"loki\");\r\n    //     })\r\n    // }\r\n\r\n\r\n    render() {\r\n\r\n        const allmovies = this.state.moviesTop.map((movie, index) =>\r\n            <div className=\"card movie-card\">\r\n                <img className=\"card-img-top\" src={`${baseImgUrl}/${movie.poster_path}`} alt={\"a\"} />\r\n                <div className=\"card-body\">\r\n                    \r\n                <h4 className=\"card-title\" key={index}>{movie.title}</h4>\r\n                <p className=\"card-text\">{movie.overview}</p>\r\n                <p className=\"card-text\">{movie.vote_average}</p>\r\n                {console.log(\"render\")}\r\n               \r\n                </div>\r\n            </div>)\r\n        // const numberPages = Math.floor(this.state.totalResuolts / 20); \r\n        return (\r\n            <div className='Home '>\r\n                <h1>Welcome To Foxx Movie</h1>\r\n                <div className=\"container\">\r\n                <SearchArea handleSubmit={this.handleSubmit} handleChange={this.handleChange}/>\r\n              {this.state.moviesTop ?  <MovieList movies={this.state.movies}/> : \"\"}\r\n                \r\n                </div>\r\n                {allmovies}\r\n               \r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport \"./registr.css\";\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport {Redirect} from 'react-router-dom'; \r\n\r\nclass Registr extends Component {\r\n    state = {email : \"\" , password : \"\", RedirectToHome : false, isError : false}\r\n// ____\r\n\r\nregistr = () => {\r\n        this.setState({isError : false});\r\n        \r\n        axios.post('/users/registr',{\r\n            email : this.state.email,\r\n            password : this.state.password\r\n        }).then(res=>{\r\n           \r\n            if(res.status === 201){\r\n                this.setState({RedirectToHome : true});\r\n                this.props.setUser({email: this.state.email , password: this.state.password});\r\n            }\r\n            else{\r\n                this.setState({isError : true})\r\n                console.log(`error code : ${res.status}`);\r\n                \r\n            }\r\n            \r\n        }).catch(err=>{\r\n            this.setState({isError : true})\r\n            console.log(err);\r\n        })\r\n    }\r\n// ____\r\n\r\n    render(){\r\n            const disabled = !this.state.email || !this.state.password;\r\n        if(this.state.RedirectToHome){\r\n            return <Redirect to = '/'/>\r\n        }\r\n\r\n        return(\r\n            <div className='registr-User'>\r\n                <h1>Registr Page</h1>\r\n                <input type='email' onChange={evt => this.setState({email : evt.target.value})} \r\n                required='required' placeholder='email'/>\r\n                <br/>\r\n                <input type=\"password\" onChange={evt => this.setState({password : evt.target.value})}\r\n                 required='required' placeholder='password'/>\r\n                 <br/>\r\n               {this.state.isError ? <p style={{color: 'red'}}>Registr Error</p> : \"\"}\r\n                <button disabled={disabled} onClick={this.registr}>Registr</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Registr;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n const Logout = (props) => {\r\n    props.setUser(null);\r\n        return (\r\n         <Redirect to='/'/>\r\n        )\r\n    \r\n}\r\n\r\nexport default Logout","import React, { Component } from 'react';\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Login from './Login';\n// import SearchArea from './search_Item_results';\nimport Home from './Home';\nimport MovieList from './movie_list_Results';\nimport Registr from './Registr';\nimport Logout from './Logout';\n\n\n\nclass App extends Component {\n  \n  state = {user : null};\n\n  setUser = user => {\n    this.setState({user : user});\n  }\n  \n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n                <div className=\"LinkHead\">\n\n                   <Link to='/'>Home</Link>\n                {!this.state.user ?  <Link to='/Login'>Login</Link> : \"\"}\n                {!this.state.user ? <Link to='/Registr'>Registr</Link> :\"\"}\n                {this.state.user ? <Link to='/search_item_results'>Search</Link> :\"\"}\n                {this.state.user ? <Link to='/Logout'>Logout</Link> :\"\"}\n\n                 </div>\n\n          <Switch>\n            < Route exact path='/' component={Home} />\n            < Route exact path='/Login' render={()=><Login setUser={this.setUser}/>} />\n            <Route exact path='/Registr' render={()=><Registr setUser={this.setUser}/>}/>\n            <Route exact path='/MovieList' component={MovieList}/>\n            <Route exact path='/Logout' render={()=><Logout setUser={this.setUser}/>}/>\n            \n           \n          \n\n            \n            \n\n\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}