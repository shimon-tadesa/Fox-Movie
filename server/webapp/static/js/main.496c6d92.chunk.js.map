{"version":3,"sources":["components/Login.js","components/mySearchArea.js","components/Movie.js","components/movie_list_Results.js","components/Home.js","components/Registr.js","components/Logout.js","components/App.js","serviceWorker.js","index.js"],"names":["Login","state","email","password","RedirectToHome","isError","login","setState","axios","post","then","res","status","props","setUser","data","console","log","catch","err","disabled","this","to","className","type","onChange","evt","target","value","required","placeholder","style","color","onClick","Component","SearchArea","class","action","onSubmit","handleSubmit","handleChange","Movie","Card","myImage","Img","variant","src","Body","myTitle","Title","myOverview","Text","userVote","MovieList","movies","map","movie","i","Container","Row","Col","md","key","poster_path","title","overview","vote_average","baseImgUrl","Home","e","preventDefault","fetch","searchTerm","json","results","totalResuolts","total_results","moviesTop","isLoaded","moviesPopular","tvShowsTop","tvShowsPopular","currentPage","get","response","moviesData","tvshowData","tvshow","homeMovies","index","alt","homeTvshow","name","Registr","registr","Logout","App","user","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.496c6d92.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    state = { email: \"\", password: \"\", RedirectToHome: false, isError: false }\r\n    // ____\r\n\r\n    login = () => {\r\n        this.setState({ isError: false });\r\n\r\n        axios.post('/users/login', {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                // res.data is user\r\n                this.setState({ RedirectToHome: true });\r\n                this.props.setUser(res.data);\r\n            }\r\n            else {\r\n                this.setState({ isError: true })\r\n                console.log(`error code : ${res.status}`);\r\n\r\n            }\r\n\r\n        }).catch(err => {\r\n            this.setState({ isError: true })\r\n            console.log(err);\r\n        })\r\n    }\r\n    // ____\r\n\r\n    render() {\r\n        const disabled = !this.state.email || !this.state.password;\r\n        if (this.state.RedirectToHome) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div className='Login-User'>\r\n                <h1>Login Page</h1>\r\n                <input type='email' onChange={evt => this.setState({ email: evt.target.value })}\r\n                    required='required' placeholder='email' />\r\n                <br />\r\n                <input type=\"password\" onChange={evt => this.setState({ password: evt.target.value })}\r\n                    required='required' placeholder='password' />\r\n                <br />\r\n                {this.state.isError ? <p style={{ color: 'red' }}>Login Error</p> : \"\"}\r\n                <button disabled={disabled} onClick={this.login}>Login</button>\r\n\r\n\r\n\r\n\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { GoSearch } from \"react-icons/go\";\r\n// import { FaSearch  } from 'react-icons/fa';\r\n\r\n\r\nconst SearchArea = (props) => {\r\n\r\n\r\n    return (\r\n        \r\n            <div className=\"row\">\r\n                <div class=\"col-lg-4 col-lg-offset-4\">\r\n\r\n                    <form action=\"\" onSubmit={props.handleSubmit}>\r\n                        <div class=\"input-group\">\r\n                            <input class=\"form-control\" placeholder=\"search movie\" type=\"text\" onChange={props.handleChange} />\r\n                            {/* <button onClick={props.handleChange}><GoSearch/></button> */}\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n         \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SearchArea;","import React from 'react';\r\nimport { Card, Row, Col, Container } from 'react-bootstrap';\r\nimport './Movie.css';\r\nconst Movie = (props) => {\r\n    return (\r\n       \r\n                    <Card >\r\n                        {props.myImage = <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500${props.myImage}`} />}\r\n                        <Card.Body>\r\n                            {props.myTitle = <Card.Title className=\"card-title\">{props.myTitle}</Card.Title>}\r\n                            {props.myOverview = <Card.Text>{props.myOverview}</Card.Text>}\r\n                            {props.userVote = <Card.Text>{props.userVote}</Card.Text>}\r\n                        </Card.Body>\r\n                    </Card>\r\n \r\n            \r\n        \r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport Movie from './Movie.js';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst MovieList = (props) => {\r\n    return (\r\n        //data movie body api then send to movie.js\r\n        props.movies.map((movie, i) => {\r\n\r\n            return (\r\n                <Container>\r\n                    <Row>\r\n                        <Col md=\"3\">\r\n                            <Movie\r\n                                key={i} myImage={movie.poster_path}\r\n                                myTitle={movie.title}\r\n                                myOverview={movie.overview}\r\n                                userVote={movie.vote_average}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            )\r\n        })\r\n\r\n    )\r\n}\r\n\r\nexport default MovieList;","import React, { Component } from \"react\";\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport SearchArea from \"./mySearchArea\";\r\nimport MovieList from \"./movie_list_Results\";\r\nimport \"./home.css\";\r\nimport { Card, Row, Col, Container } from \"react-bootstrap\";\r\n\r\nconst baseImgUrl = \"https://image.tmdb.org/t/p/w500\";\r\nlet myKey = \"d759a614b16c0c1c0295b4313e94aeec\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            moviesTop: [],\r\n            movies: [],\r\n            isLoaded: false,\r\n            moviesPopular: [],\r\n            tvShowsTop: [],\r\n            searchTerm: \"\",\r\n            tvShowsPopular: [],\r\n            totalResuolts: 0,\r\n            currentPage: 1\r\n        };\r\n        console.log(\"constructor\");\r\n    }\r\n    // ______________________________________________\r\n    async componentDidMount() {\r\n        const response = await axios.get(\"http://localhost:8080/home\");\r\n        const moviesData = response.data.movies;\r\n        console.log(moviesData);\r\n        console.log(\"componentDidMount\");\r\n        this.setState({ moviesTop: moviesData });\r\n\r\n        const res = await axios.get(\"http://localhost:8080/home/tv\");\r\n        const tvshowData = res.data.tvshow;\r\n        console.log(tvshowData);\r\n        console.log(\"componentDidMount2\");\r\n        this.setState({ tvShowsPopular: tvshowData });\r\n    }\r\n\r\n    // __________________________________________\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        fetch(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=${myKey}&query=${this.state.searchTerm}`\r\n        )\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                this.setState({\r\n                    movies: [...data.results],\r\n                    totalResuolts: data.total_results\r\n                });\r\n                console.log(\"search is done\");\r\n            });\r\n    };\r\n    // _________________________________\r\n    handleChange = e => {\r\n        this.setState({ searchTerm: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        const homeMovies = this.state.moviesTop.map((movie, index) => (\r\n            <Col md=\"6\">\r\n                <Card className=\"movie-card\">\r\n                    <Card.Img\r\n                        variant=\"top \"\r\n                        src={`${baseImgUrl}/${movie.poster_path}`}\r\n                        alt={\"a\"} />\r\n\r\n                   \r\n                    <Card.Body>\r\n                        <Card.Title className=\"card-title\" key={index}>\r\n                            {movie.title}\r\n                        </Card.Title>\r\n                        <Card.Text className=\"card-text\">{movie.overview}</Card.Text>\r\n                        <Card.Text className=\"card-text\">{movie.vote_average}</Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        ));\r\n\r\n        const homeTvshow = this.state.tvShowsPopular.map((movie, index) => (\r\n            <Col md=\"3\">\r\n                <Card className=\"movie-card\">\r\n                    <Card.Img\r\n                        variant=\"top \"\r\n                        src={`${baseImgUrl}/${movie.poster_path}`}\r\n                        alt={\"a\"}\r\n                    />\r\n                    <Card.Body>\r\n                        <Card.Title className=\"card-title\" key={index}>\r\n                            {movie.name}\r\n                        </Card.Title>\r\n                        <Card.Text className=\"card-text\">{movie.overview}</Card.Text>\r\n                        <Card.Text className=\"card-text\">{movie.vote_average}</Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        ));\r\n        // const numberPages = Math.floor(this.state.totalResuolts / 20);\r\n        return (\r\n            <div className=\"Home \">\r\n                <h1>Welcome To Foxx Movie</h1>\r\n                <Container>\r\n                    <SearchArea\r\n                        handleSubmit={this.handleSubmit}\r\n                        handleChange={this.handleChange}\r\n                    />\r\n                </Container>\r\n\r\n                <MovieList movies={this.state.movies} />\r\n                <div className=\"allMovies\">\r\n                    <Container>\r\n                        <Row>\r\n                            {!this.state.totalResuolts ? homeMovies : \"\"}\r\n                            {!this.state.totalResuolts ? homeTvshow : \"\"}\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport \"./registr.css\";\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport {Redirect} from 'react-router-dom'; \r\n\r\nclass Registr extends Component {\r\n    state = {email : \"\" , password : \"\", RedirectToHome : false, isError : false}\r\n// ____\r\n\r\nregistr = () => {\r\n        this.setState({isError : false});\r\n        \r\n        axios.post('/users/registr',{\r\n            email : this.state.email,\r\n            password : this.state.password\r\n        }).then(res=>{\r\n           \r\n            if(res.status === 201){\r\n                this.setState({RedirectToHome : true});\r\n                this.props.setUser({email: this.state.email , password: this.state.password});\r\n            }\r\n            else{\r\n                this.setState({isError : true})\r\n                console.log(`error code : ${res.status}`);\r\n                \r\n            }\r\n            \r\n        }).catch(err=>{\r\n            this.setState({isError : true})\r\n            console.log(err);\r\n        })\r\n    }\r\n// ____\r\n\r\n    render(){\r\n            const disabled = !this.state.email || !this.state.password;\r\n        if(this.state.RedirectToHome){\r\n            return <Redirect to = '/'/>\r\n        }\r\n\r\n        return(\r\n            <div className='registr-User'>\r\n                <h1>Registr Page</h1>\r\n                <input type='email' onChange={evt => this.setState({email : evt.target.value})} \r\n                required='required' placeholder='email'/>\r\n                <br/>\r\n                <input type=\"password\" onChange={evt => this.setState({password : evt.target.value})}\r\n                 required='required' placeholder='password'/>\r\n                 <br/>\r\n               {this.state.isError ? <p style={{color: 'red'}}>Registr Error</p> : \"\"}\r\n                <button disabled={disabled} onClick={this.registr}>Registr</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Registr;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n const Logout = (props) => {\r\n    props.setUser(null);\r\n        return (\r\n         <Redirect to='/'/>\r\n        )\r\n    \r\n}\r\n\r\nexport default Logout","import React, { Component } from 'react';\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Login from './Login';\nimport Home from './Home';\nimport MovieList from './movie_list_Results';\nimport Registr from './Registr';\nimport Logout from './Logout';\n\n\n\nclass App extends Component {\n  \n  state = {user : null};\n\n  setUser = user => {\n    this.setState({user : user});\n  }\n  \n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n                <div className=\"LinkHead\">\n\n                   <Link to='/'>Home</Link>\n                {!this.state.user ?  <Link to='/Login'>Login</Link> : \"\"}\n                {!this.state.user ? <Link to='/Registr'>Registr</Link> :\"\"}\n                {this.state.user ? <Link to='/search_item_results'>Search</Link> :\"\"}\n                {this.state.user ? <Link to='/Logout'>Logout</Link> :\"\"}\n\n                 </div>\n\n          <Switch>\n            < Route exact path='/' component={Home} />\n            < Route exact path='/Login' render={()=><Login setUser={this.setUser}/>} />\n            <Route exact path='/Registr' render={()=><Registr setUser={this.setUser}/>}/>\n            <Route exact path='/MovieList' component={MovieList}/>\n            <Route exact path='/Logout' render={()=><Logout setUser={this.setUser}/>}/>\n            \n           \n          \n\n            \n            \n\n\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}