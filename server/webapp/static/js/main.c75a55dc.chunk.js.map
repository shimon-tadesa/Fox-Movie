{"version":3,"sources":["components/Login.js","components/mySearchArea.js","components/Movie.js","components/movie_list_Results.js","components/Home.js","components/Registr.js","components/Logout.js","components/showPage.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","email","password","RedirectToHome","isError","login","setState","axios","post","then","res","status","props","setUser","data","console","log","catch","err","disabled","this","to","className","type","onChange","evt","target","value","required","placeholder","style","color","onClick","Component","SearchArea","action","onSubmit","handleSubmit","handleChange","Movie","Col","md","Card","myImage","Img","variant","src","Body","myTitle","Title","myOverview","Text","userVote","MovieList","movies","map","movie","i","key","poster_path","title","overview","vote_average","baseImgUrl","Home","e","preventDefault","get","searchTerm","results","totalResuolts","total_results","movieInfo","flag","addItemToList","id","moviesTop","isLoaded","moviesPopular","tvShowsTop","tvShowsPopular","currentPage","response","moviesData","tvshowData","tvshow","pathname","homeMovies","index","alt","homeTvshow","name","Container","Row","Registr","registr","MyCart","Logout","ShowPage","location","backgroundImage","Cart","RedirectToCart","cart","App","user","exact","path","component","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c75a55dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    state = { email: \"\", password: \"\", RedirectToHome: false, isError: false }\r\n// ____\r\n\r\n    login = () => {\r\n        this.setState({ isError: false });\r\n\r\n        axios.post('/users/login', {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                // res.data is user\r\n                this.setState({ RedirectToHome: true });\r\n                this.props.setUser(res.data);\r\n            }\r\n            else {\r\n                this.setState({ isError: true })\r\n                console.log(`error code : ${res.status}`);\r\n\r\n            }\r\n\r\n        }).catch(err => {\r\n            this.setState({ isError: true })\r\n            console.log(err);\r\n        })\r\n    }\r\n// ____\r\n\r\n    render() {\r\n        const disabled = !this.state.email || !this.state.password;\r\n        if (this.state.RedirectToHome) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div className='Login-User'>\r\n                <h1>Login Page</h1>\r\n                <input type='email' onChange={evt => this.setState({ email: evt.target.value })}\r\n                    required='required' placeholder='email' />\r\n                <br />\r\n                <input type=\"password\" onChange={evt => this.setState({ password: evt.target.value })}\r\n                    required='required' placeholder='password' />\r\n                <br />\r\n                {this.state.isError ? <p style={{ color: 'red' }}>Login Error</p> : \"\"}\r\n                <button disabled={disabled} onClick={this.login}>Login</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport \"./mySearchArea.css\";\r\n\r\n\r\n\r\n\r\nconst SearchArea = (props) => {\r\n\r\n\r\n    return (\r\n        \r\n            <div className=\"row\">\r\n                <div className=\"col-lg-4 col-lg-offset-4\">\r\n\r\n                    <form action=\"\" onSubmit={props.handleSubmit}>\r\n                        <div className=\"input-group\">\r\n                            <input className=\"form-control\" placeholder=\"search movie\" type=\"text\" onChange={props.handleChange} />\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n         \r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SearchArea;","import React from 'react';\r\nimport { Card, Col} from 'react-bootstrap';\r\nimport './Movie.css';\r\nconst Movie = (props) => {\r\n    return (\r\n\r\n        \r\n            \r\n        <Col md=\"3\">\r\n                    <Card >\r\n                        {props.myImage = <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500${props.myImage}`} />}\r\n                        <Card.Body>\r\n                            {props.myTitle = <Card.Title className=\"card-title\">{props.myTitle}</Card.Title>}\r\n                            {props.myOverview = <Card.Text>{props.myOverview}</Card.Text>}\r\n                            {props.userVote = <Card.Text>{props.userVote}</Card.Text>}\r\n                        </Card.Body>\r\n                    </Card>\r\n        </Col>\r\n        \r\n       \r\n                  \r\n            \r\n        \r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport Movie from './Movie.js';\r\nconst MovieList = (props) => {\r\n    return (\r\n        //get data movie body api then send to movie.js\r\n        props.movies.map((movie, i) => {\r\n\r\n            return (\r\n\r\n                            <Movie\r\n                                key={i} myImage={movie.poster_path}\r\n                                myTitle={movie.title}\r\n                                myOverview={movie.overview}\r\n                                userVote={movie.vote_average}\r\n                            />\r\n                             \r\n            )\r\n        })\r\n\r\n    )\r\n}\r\n\r\nexport default MovieList;","import React, { Component } from \"react\";\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport SearchArea from \"./mySearchArea\";\r\nimport MovieList from \"./movie_list_Results\";\r\nimport \"./home.css\";\r\nimport { Card, Row, Col, Container } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst baseImgUrl = \"https://image.tmdb.org/t/p/w500\";\r\nlet myKey = \"d759a614b16c0c1c0295b4313e94aeec\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      moviesTop: [], // home-movies\r\n      movies: [], // home-search-movies\r\n      isLoaded: false,\r\n      moviesPopular: [],\r\n      tvShowsTop: [],\r\n      searchTerm: \"\",\r\n      tvShowsPopular: [],\r\n      totalResuolts: 0,\r\n      currentPage: 1,\r\n      movie: null,\r\n      flag: false\r\n    };\r\n    console.log(\"constructor is working\");\r\n  }\r\n// ______________________\r\n  async componentDidMount() {\r\n    const response = await axios.get(\"http://localhost:8080/home\");\r\n    const moviesData = response.data.movies;\r\n    console.log(moviesData);\r\n    console.log(\"componentDidMount is working\");\r\n    this.setState({ moviesTop: moviesData });\r\n\r\n    const res = await axios.get(\"http://localhost:8080/home/tv\");\r\n    const tvshowData = res.data.tvshow;\r\n    console.log(tvshowData);\r\n    console.log(\"componentDidMount2 is working\");\r\n    this.setState({ tvShowsPopular: tvshowData });\r\n  }\r\n\r\n// _______________________\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${myKey}&query=${this.state.searchTerm}`)\r\n    .then(res => {\r\n      console.log(res.data.results);\r\n      this.setState({\r\n      movies: [...res.data.results],\r\n      totalResuolts: res.data.total_results\r\n    })\r\n      \r\n    }).catch(err => {\r\n\r\n      console.log(err);\r\n    });\r\n    console.log('search is done');\r\n  };\r\n  // _____________________\r\n\r\n  handleChange = e => {\r\n    this.setState({ searchTerm: e.target.value });\r\n  };\r\n// _______________________\r\n  movieInfo = movie => {\r\n    this.setState({\r\n      flag: true,\r\n      movie: movie\r\n    });\r\n  };\r\n// _______________________\r\n\r\n addItemToList = (movie)=>{\r\n    console.log(movie.id);\r\n }\r\n\r\n\r\n  render() {\r\n\r\n    if (this.state.flag) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/ShowPage\",\r\n            movie: this.state.movie\r\n          }}\r\n        />\r\n      );\r\n    }\r\n// _______________________\r\n\r\n    const homeMovies = this.state.moviesTop.map((movie, index) => (\r\n      <Col md=\"3\">\r\n        <Card className=\"movie-card\">\r\n          <Card.Img\r\n            onClick={() => this.movieInfo(movie)}\r\n            variant=\"top \"\r\n            src={`${baseImgUrl}/${movie.poster_path}`}\r\n            alt={\"a\"}\r\n          />\r\n\r\n          <Card.Body>\r\n            <Card.Title className=\"card-title\" key={index}>\r\n              {movie.title}\r\n            </Card.Title>\r\n            <Card.Text className=\"card-text\">{movie.overview}</Card.Text>\r\n            <Card.Text className=\"card-text\">{movie.vote_average}</Card.Text>\r\n            <button onClick={this.addItemToList}>Add</button>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    ));\r\n// ______________________\r\n    const homeTvshow = this.state.tvShowsPopular.map((movie, index) => (\r\n      <Col md=\"3\">\r\n        <Card className=\"movie-card\">\r\n          <Card.Img\r\n            onClick={() => this.movieInfo(movie)}\r\n            variant=\"top \"\r\n            src={`${baseImgUrl}/${movie.poster_path}`}\r\n            alt={\"a\"}\r\n          />\r\n          <Card.Body>\r\n            <Card.Title className=\"card-title\" key={index}>\r\n              {movie.name}\r\n            </Card.Title>\r\n            <Card.Text className=\"card-text\">{movie.overview}</Card.Text>\r\n            <Card.Text className=\"card-text\">{movie.vote_average}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    ));\r\n// ______________________\r\n    return (\r\n      <div className=\"Home \">\r\n        <h1>Welcome To Foxx Movie</h1>\r\n        <Container>\r\n          <SearchArea\r\n            handleSubmit={this.handleSubmit}\r\n            handleChange={this.handleChange}\r\n          />\r\n        </Container>\r\n\r\n        <Container>\r\n          <Row>\r\n            <MovieList movies={this.state.movies} />\r\n          </Row>\r\n        </Container>\r\n\r\n        <div className=\"allMovies\">\r\n          <Container>\r\n            <Row>\r\n              {!this.state.totalResuolts ? homeMovies : \"\"}\r\n              {!this.state.totalResuolts ? homeTvshow : \"\"}\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport \"./registr.css\";\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Registr extends Component {\r\n    state = { email: \"\", password: \"\", RedirectToHome: false, isError: false}\r\n    // ____\r\n\r\n    registr = () => {\r\n        this.setState({ isError: false });\r\n\r\n        axios.post('/users/registr', {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            MyCart: []\r\n        }).then(res => {\r\n\r\n            if (res.status === 201) {\r\n                this.setState({ RedirectToHome: true });\r\n                this.props.setUser({ email: this.state.email, password: this.state.password });\r\n            }\r\n            else {\r\n                this.setState({ isError: true })\r\n                console.log(`error code : ${res.status}`);\r\n\r\n            }\r\n\r\n        }).catch(err => {\r\n            this.setState({ isError: true })\r\n            console.log(err);\r\n        })\r\n    }\r\n    // ____\r\n\r\n    render() {\r\n        const disabled = !this.state.email || !this.state.password;\r\n        if (this.state.RedirectToHome) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div className='registr-User'>\r\n                <h1>Registr Page</h1>\r\n                <input type='email' onChange={evt => this.setState({ email: evt.target.value })}\r\n                    required='required' placeholder='email' />\r\n                <br />\r\n                <input type=\"password\" onChange={evt => this.setState({ password: evt.target.value })}\r\n                    required='required' placeholder='password' />\r\n                <br />\r\n                {this.state.isError ? <p style={{ color: 'red' }}>Registr Error</p> : \"\"}\r\n                <button disabled={disabled} onClick={this.registr}>Registr</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Registr;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n const Logout = (props) => {\r\n    props.setUser(null);\r\n        return (\r\n         <Redirect to='/'/>\r\n        )\r\n    \r\n}\r\n\r\nexport default Logout","import React, { Component } from 'react'\r\nimport \"./showPage.css\";\r\n\r\n\r\nclass ShowPage extends Component {\r\n\r\n    movie = this.props.location.movie;\r\n\r\n    render() {\r\n        console.log(this.movie);\r\n        return (\r\n            \r\n            <div className=\"movieInfo\" style={{backgroundImage:'url(https://images.alphacoders.com/633/633643.jpg)'}}>\r\n            <div className=\"movieContent\">\r\n              <img className=\"poster\" src={`https://image.tmdb.org/t/p/w300${this.movie.poster_path}`}/>\r\n              <h4>{this.movie.title ? this.movie.title : this.movie.name}</h4>\r\n              <p className=\"movieText\">{this.movie.overview}</p>\r\n              <p className=\"movieVote\">{this.movie.vote_average}</p>\r\n            </div>\r\n          </div>\r\n            \r\n        \r\n        )\r\n    } \r\n\r\n\r\n}\r\nexport default ShowPage;","import React, { Component } from 'react'\r\nimport axios from \"../../../server/node_modules/axios\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Cart extends Component {\r\n\r\n    state = {isError: false,RedirectToCart: false,MyCart: []};\r\n    \r\n    cart = () => {\r\n\r\n        axios.post('/cart', {\r\n            MyCart: this.state.MyCart\r\n        }).then(res => {\r\n\r\n            if (res.status === 201) {\r\n                this.setState({ RedirectToCart: true });\r\n                this.props.setUser({MyCart: this.state.MyCart});\r\n            }\r\n            else {\r\n                this.setState({ isError: true })\r\n                console.log(`error code : ${res.status}`);\r\n\r\n            }\r\n\r\n        }).catch(err => {\r\n            this.setState({ isError: true })\r\n            console.log(err);\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state.RedirectToCart) {\r\n            return <Redirect to='/cart' />\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>Movie List</h1>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Cart;","import React, { Component } from 'react';\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport MovieList from './components/movie_list_Results';\nimport Registr from './components/Registr';\nimport Logout from './components/Logout';\nimport ShowPage from \"./components/showPage\";\nimport Cart from \"./components/Cart\";\n\n\nclass App extends Component {\n\n  state = { user: null };// now is empty\n\n  setUser = user => {\n    this.setState({ user: user }); \n  }\n\n  render() {\n  \n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <div className=\"LinkHead\">\n            <img id=\"myLogo\" src=\"https://i.pinimg.com/originals/d0/7e/81/d07e81371cfc20ad1bf670847cc3fa57.jpg\"/>\n            <Link to='/'>Home</Link>\n            {!this.state.user ? <Link to='/Login'>Login</Link> : \"\"}\n            {!this.state.user ? <Link to='/Registr'>Registr</Link> : \"\"}\n            {this.state.user ? <Link to='/Cart'>MyCart</Link> : \"\"}\n            {this.state.user ? <Link to='/Logout'>Logout</Link> : \"\"}\n\n\n          </div>\n\n          <Switch>\n            < Route exact path='/' component={Home} />\n            < Route exact path='/Login' render={() => <Login setUser={this.setUser} />} />\n            <Route exact path='/Registr' render={() => <Registr setUser={this.setUser} />} />\n            <Route exact path='/MovieList' component={MovieList} />\n            <Route exact path='/showPage' component={ShowPage} />\n            <Route exact path='/Logout' render={() => <Logout setUser={this.setUser} />} />\n            <Route exact path='/Cart' render={() => <Cart setUser={this.setUser} />} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}